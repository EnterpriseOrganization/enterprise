# Contributor Covenant Code of Conduct

## code standard
* 内部函数命名同意使用小驼峰的形式，
* 变量命名使用全部小写单词与单词之间用下划线连接的形式(如a_b)
* 变量名字避免使用数字作为区分，除非实在有必要
* 前后端方法要做到REST风格，有困难的可以放宽要求
## git standard
* 一个team创建一个team的主分支，每次组员（有自己的分支）提交的时候，有小组负责人进行merge操作。
* 时间上，应该2~3天进行merge一次，每个team应该5天发起一个merge请求。
* 每个team的主分支命名应该以小组的名字或者负责人的名字为主分支名字前缀或者就作为小组主分支的名字。
* 小组内部由负责人负责，将小组内的issue尽量提交完整。
* 每次push之前，要先对远端分支进行pull操作
## project standard
* 每个组只能更改自己负责的app内部的文件
* 应该尽量避免更改修改公共app内的文件
* 当不得不修改公共app内的文件时，需要先对当前最新版本pull，然后将更改传到本组主分支上，有本组主分支向主分支发起merge请求
* 修改了公共app内的文件之后，需要通知其余各组进行更新。
## REST风格规范
* 用URL表示资源
* HTTP方法表示操作
* URI中尽量使用连字符"-"代替下划线"_"的使用
* URI中统一使用小写字母
* URI中不要包含文件(脚本)的扩展名
* URI 命名规范
  文档(Document)类型的资源用名词(短语)单数命名
  集合(Collection)类型的资源用名词(短语)复数命名
  仓库(Store)类型的资源用名词(短语)复数命名
  控制器(Controller)类型的资源用动词(短语)命名
  URI中有些字段可以是变量，在实际使用中可以按需替换
* CRUD（增删改查）的操作不要体现在URI中，HTTP协议中的操作符已经对CRUD做了映射。
* HTTP请求方法
  GET方法用来获取资源
  PUT方法可用来新增/更新Store类型的资源
  PUT方法可用来更新一个资源
  POST方法可用来创建一个资源
  POST方法可用来触发执行一个Controller类型资源
  DELETE方法用于删除资源
* HTTP响应状态码
  200 (“OK”) 用于一般性的成功返回
  200 (“OK”) 不可用于请求错误返回
  201 (“Created”) 资源被创建
  202 (“Accepted”) 用于Controller控制类资源异步处理的返回，仅表示请求已经收到。对于耗时比较久的处理，一般用异步处理来完成
  204 (“No Content”) 此状态可能会出现在PUT、POST、DELETE的请求中，一般表示资源存在，但消息体中不会返回任何资源相关的状态或信息。
  301 (“Moved Permanently”) 资源的URI被转移，需要使用新的URI访问
  302 (“Found”) 不推荐使用，此代码在HTTP1.1协议中被303/307替代。我们目前对302的使用和最初HTTP1.0定义的语意是有出入的，应该只有在GET/HEAD方法下，客户端才能根据Location执行自动跳转，而我们目前的客户端基本上是不会判断原请求方法的，无条件的执行临时重定向
  303 (“See Other”) 返回一个资源地址URI的引用，但不强制要求客户端获取该地址的状态(访问该地址)
  304 (“Not Modified”) 有一些类似于204状态，服务器端的资源与客户端最近访问的资源版本一致，并无修改，不返回资源消息体。可以用来降低服务端的压力
  307 (“Temporary Redirect”) 目前URI不能提供当前请求的服务，临时性重定向到另外一个URI。在HTTP1.1中307是用来替代早期HTTP1.0中使用不当的302
  400 (“Bad Request”) 用于客户端一般性错误返回, 在其它4xx错误以外的错误，也可以使用400，具体错误信息可以放在body中
  401 (“Unauthorized”) 在访问一个需要验证的资源时，验证错误
  403 (“Forbidden”) 一般用于非验证性资源访问被禁止，例如对于某些客户端只开放部分API的访问权限，而另外一些API可能无法访问时，可以给予403状态
  404 (“Not Found”) 找不到URI对应的资源
  405 (“Method Not Allowed”) HTTP的方法不支持，例如某些只读资源，可能不支持POST/DELETE。但405的响应header中必须声明该URI所支持的方法
  406 (“Not Acceptable”) 客户端所请求的资源数据格式类型不被支持，例如客户端请求数据格式为application/xml，但服务器端只支持application/json
  409 (“Conflict”) 资源状态冲突，例如客户端尝试删除一个非空的Store资源
  412 (“Precondition Failed”) 用于有条件的操作不被满足时
  415 (“Unsupported Media Type”) 客户所支持的数据类型，服务端无法满足
  500 (“Internal Server Error”) 服务器端的接口错误，此错误于客户端无关
  
